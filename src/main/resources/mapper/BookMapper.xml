<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Read.Domain.Book.BookMapper">

    <select id="selectAll" resultType="Read.Domain.Book.Book">
        SELECT *
        FROM Book
    </select>

    <insert id="insert" parameterType="Read.Domain.Book.InsertDto">
      CALL read.bookInsert(#{userId},#{author},#{translator},#{publisher},#{title},#{category},#{coverUrl},#{isbn},#{latitude},#{longitude})
    </insert>

    <select id="detailBook" parameterType="java.lang.String" resultType="Read.Domain.Book.DetailBookInfo">
        SELECT book_number AS bookId, cover_url AS coverUrl, title, publisher, author, publication
        FROM read.Book
        WHERE bookId = #{bookId}
    </select>

    <select id="requestBook" parameterType="java.lang.String" resultType="Read.Domain.ResponseDto.RequestBookDto">
        SELECT DISTINCT b.title, b.author, b.publisher, b.publication,b.isbn, b.cover_url AS coverUrl , (SELECT COUNT(*)
																			FROM read.Log a join read.Book c
																			ON a.bookId = c.bookId
																			WHERE (c.author = #{content} OR c.title= #{content}) AND a.status=2) AS requestCount
        FROM read.Log l JOIN read.Book b
        ON l.bookId = b.bookId
        WHERE (b.author = #{content} OR b.title = #{content}) AND l.status=2
    </select>

    <select id="myRequestBookCount" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM read.Log l JOIN read.Book b
        ON l.bookId = b.bookId AND b.isbn =#{isbn}
        WHERE l.userId=#{userId} AND ( l.status =4 OR l.status =6)
    </select>
</mapper>